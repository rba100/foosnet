<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:foosNet="clr-namespace:FoosNet"
    xmlns:converters="clr-namespace:FoosNet"
    x:Class="FoosNet.MainNotifyWindow" x:Name="uiMainNotifyWindow"
    Title="" Height="502" Width="256"
    ShowInTaskbar="False"
    WindowStyle="None" 
    AllowsTransparency="True" 
    ResizeMode="NoResize"
    Background="Transparent"
    MouseEnter="uiWindowMainNotification_MouseEnter"
    MouseLeave="uiWindowMainNotification_MouseLeave" 
    Visibility="Visible" 
    Topmost="True" 
    BorderThickness="1" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:dragDrop="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
    xmlns:controls="clr-namespace:FoosNet.Controls"
    mc:Ignorable="d">
    <Window.DataContext>
        <foosNet:NotifyWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Storyboard x:Key="gridFadeInStoryBoard">
            <DoubleAnimation Storyboard.TargetName="uiGridMain" BeginTime="0:0:0.1"
                Storyboard.TargetProperty="Opacity" From="0.00" To="1.00" AutoReverse="False" Duration="0:0:0.3" />
        </Storyboard>
        <Storyboard x:Key="gridFadeOutStoryBoard">
            <DoubleAnimation Storyboard.TargetName="uiGridMain" BeginTime="0:0:0.6"
                Storyboard.TargetProperty="Opacity" From="1.00" To="0.00" AutoReverse="False" Duration="0:0:0.6" />
        </Storyboard>
        <converters:ConvertStatus x:Key="StatusConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Window.Resources>
    <Border CornerRadius="5">
        <Grid x:Name="uiGridMain" Margin="10">
            <Border Width="Auto" Height="Auto"  Style="{StaticResource MainGridBorder}">
            </Border>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="27"/>
                    <RowDefinition Height="45"/>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="44"/>
                </Grid.RowDefinitions>

                <Label Margin="0" 
                       x:Name="TitleLabel" 
                       Foreground="White" 
                       Opacity="0.9" 
                       Content="FoosNet" 
                       MouseDown="TitleLabel_OnMouseDown" 
                       Width="55"
                       HorizontalAlignment="Left"
                       Cursor="Hand"/>

                <Grid Grid.Row="0" Margin="5,0,12,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0"/>
                        <RowDefinition Height="18" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="36" />
                        <ColumnDefinition Width="42" />
                    </Grid.ColumnDefinitions>
                    <foosNet:SlickToggleButton x:Name="PinButton" 
                                               Style="{StaticResource SlickButton}" 
                                               HighlightBackground="#FF2299EE" 
                                               PressedBackground="#FF1188DD"
                                               BorderThickness="1,0,0,1"
                                               Grid.Column="1" 
                                               Grid.Row="1" 
                                               FontWeight="Bold" 
                                               Click="PinButton_Click">
                        <Image x:Name="PinImage" Source="pack://application:,,/Images/Un-Pinned.png" Stretch="None"/>
                    </foosNet:SlickToggleButton>
                    <foosNet:SlickToggleButton x:Name="CloseButton" 
                                               Style="{StaticResource SlickButton}" 
                                               HighlightBackground="#FF2299EE" 
                                               BorderThickness="1,0,1,1"
                                               PressedBackground="#FF1188DD" 
                                               Content="X" 
                                               Click="CloseButton_Click" 
                                               Grid.Row="1" 
                                               FontWeight="Bold" 
                                               Foreground="#FFFFFFFF" 
                                               Grid.Column="2" />
                </Grid>

                <Grid Grid.Row="1" Margin="10,5,10,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="42*"/>
                        <ColumnDefinition Width="65*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" VerticalAlignment="Center" Padding="5" HorizontalAlignment="Left" TextAlignment="Center"
                               MouseDown="TableStatusImage_OnMouseDown" Height="27" Width="78" FontWeight="DemiBold">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsTableFree}" Value="false">
                                        <Setter Property="Text" Value="Table busy"/>
                                        <Setter Property="Foreground" Value="DarkRed"/>
                                        <Setter Property="Background" Value="#FFDD9C9C"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsTableFree}" Value="true">
                                        <Setter Property="Text" Value="Table free"/>
                                        <Setter Property="Foreground" Value="ForestGreen"/>
                                        <Setter Property="Background" Value="#FF9FCC9F"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Grid.Column="1" VerticalAlignment="Center" TextAlignment="Right" Text="{Binding Path=GameManager.StatusMessage}" FontWeight="DemiBold" Foreground="Gray" Height="16" Margin="0,4,0,5" Width="130"/>

                </Grid>

                <Border Name="FoosTableImageBorder"
                        Visibility="Collapsed"
                        Grid.Row="2"
                        Margin="0, 0, 0, 10"
                        BorderThickness="5"
                        Width="214"
                        Height="162"
                        Background="WhiteSmoke">
                    <Grid>
                        <controls:Spinner Width="16" Height="16" />
                        <Image Name="FoosTableImage" Width="206" Height="154" 
                                   MouseDown="FoosTableImage_OnMouseDown"/>
                    </Grid>

                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsTableFree}" Value="false">
                                    <Setter Property="BorderBrush" Value="#FFDD9C9C"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsTableFree}" Value="true">
                                    <Setter Property="BorderBrush" Value="#FF9FCC9F"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>

                <Grid Grid.Row="3" Margin="10,0,10,10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock FontWeight="Bold" Margin="0,0,0,5">Contacts</TextBlock>
                    <Grid Grid.Row="1">
                        <ListView Name="FoosPlayersList" MouseDoubleClick="FoosPlayersList_OnMouseDoubleClick"
                                  Padding="0,5,0,0"
                                  ItemsSource="{Binding FoosPlayers}"
                                  Grid.Column="0" 
                                  dragDrop:DragDrop.IsDragSource="True"
                                  dragDrop:DragDrop.IsDropTarget="True"
                                  ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                  PreviewMouseLeftButtonDown="FoosPlayersList_OnPreviewMouseLeftButtonDown">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="21"/>
                                            <ColumnDefinition Width="165"/>
                                            <ColumnDefinition Width="20"/>
                                        </Grid.ColumnDefinitions>
                                        <Image UseLayoutRounding="True"  Grid.Column="0" Width="16" Height="16" Margin="0,0" Source="{Binding Status, Converter = {StaticResource StatusConverter}}"></Image>
                                        <TextBlock  Grid.Column="1"  Margin="5,1,5,1" Text="{Binding DisplayName}" TextTrimming="CharacterEllipsis"></TextBlock>
                                        <controls:Spinner x:Name="LoadingSpinner" Grid.Column="2"  Width="16">
                                            <controls:Spinner.Style>
                                                <Style TargetType="controls:Spinner">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding GameState}" Value="Pending">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </controls:Spinner.Style>
                                        </controls:Spinner>
                                        <Image Grid.Column="2" Width="16" Height="16" Source="/Images/accepted.png">
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding GameState}" Value="Accepted">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                        <Image Grid.Column="2" Width="16" Height="16" Source="/Images/declined.png">
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding GameState}" Value="Declined">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                        <Image Grid.Column="2" Width="16" Height="16" Source="/Images/timeout.png" ToolTip="Time out">
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding GameState}" Value="Timeout">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                        <Image Grid.Column="2" Width="16" Height="16" Source="/Images/challenger.png" ToolTip="Game organiser">
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding GameState}" Value="Challenger">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ContextMenu>
                                <ContextMenu Name="PlayerListContextMenu">
                                    <MenuItem Header="Send invite"
                                              Command="{Binding ChallengeSelectedPlayer}">
                                        <MenuItem.Icon>
                                            <Image Width="16" Height="16" Source="/FoosNet;component/Images/plus.png"></Image>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Start conversation"
                                              Command="{Binding ChatToSelectedPlayerCommand}">
                                        <MenuItem.Icon>
                                            <Image Width="16" Height="16" Source="/FoosNet;component/Images/chat.png"></Image>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <ContextMenu.ItemContainerStyle>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}},
                                    Path=PlacementTarget.SelectedItems}" />
                                        </Style>
                                    </ContextMenu.ItemContainerStyle>
                                </ContextMenu>
                            </ListView.ContextMenu>
                        </ListView>
                    </Grid>
                </Grid>
                <Grid Grid.Row="4" Margin="10,0,10,5" Name="GameControlsGrid" >
                    <StackPanel Visibility="{Binding Path=GameManager.GameCreationInProgress, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Button Content="Cancel game" Margin="0,0,0,5" Command="{Binding CancelGameCommand}" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Width="200"/>
                        <Button Content="Start game" Margin="0,0,0,5" Command="{Binding StartGameCommand}" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Width="200"/>
                    </StackPanel>
                    <StackPanel Visibility="{Binding Path=GameManager.HasAcceptedRemoteGame, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Button Content="Cancel game" Margin="0,0,0,5" Command="{Binding CancelGameCommand}" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Width="200"/>
                    </StackPanel>
                </Grid>
                <Grid Margin="5,0,5,0" Grid.Row="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Margin="5" Command="{Binding ShowSettingsCommand}">
                        <Image Source="Images\settings.png" Width="24" Height="24"/>
                    </Button>
                    <Button Grid.Column="2" HorizontalAlignment="Stretch" Margin="5" Width="80" Height="25"
                            Command="{Binding ChallengeSelectedPlayer}" CommandParameter="{Binding ElementName=FoosPlayersList, Path=SelectedItems}" Content="Invite">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                <Setter Property="Background" Value="LightSkyBlue"/>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="#FFE0E0E0"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Grid.Column="3" HorizontalAlignment="Stretch" Margin="5" Width="80" Height="25" Content="QuickPlay™"
                            Command="{Binding CreateGameAutoCommand}" CommandParameter="{Binding ElementName=FoosPlayersList, Path=SelectedItems}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                <Setter Property="Background" Value="LightSkyBlue"/>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="#FFE0E0E0"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>

                <Grid Grid.Row="1" Grid.RowSpan="5" Name="SettingsGrid" Visibility="{Binding IsShowSettings, Converter={StaticResource BooleanToVisibilityConverter}}"
                      Background="#FFF9F9F9" Margin="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <CheckBox Content="Minimal alerts" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding UseMinimalAlerts}"/>
                    <Button Grid.Row="1" HorizontalAlignment="Right" Margin="0,0,9,8" Width="80" Height="25" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                            Command="{Binding ShowSettingsCommand}" CommandParameter="{Binding ElementName=FoosPlayersList, Path=SelectedItems}" Background="LightSkyBlue">Done</Button>
                </Grid>
            </Grid>
        </Grid>
    </Border>
</Window>
